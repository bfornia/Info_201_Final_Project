# Create a variable `my_bday_intro` using the `make_birthday_intro()` function,
# passing in `my_name`, `my_age`, and your upcoming birthday.
my_bday_intro <- make_birthday_intro(my_name, my_age, "2019-02-21")
my_bday_intro
?Sys.time
?gsub
# Challenge ------------------------------------------------------------------
# Write a function `remove_digits` that will remove all digits
# (i.e., 0 through 9) from all elements in a *vector of strings*.
remove_digits <- function(string){
gsub("[:digit:]", "", string)
}
remove_digits(my_bday_intro""
remove_digits(my_bday_intro)
my_bday_intro
?gsub
# Challenge ------------------------------------------------------------------
# Write a function `remove_digits` that will remove all digits
# (i.e., 0 through 9) from all elements in a *vector of strings*.
remove_digits <- function(string){
sub("[:digit:]", "", string)
}
remove_digits(my_bday_intro)
?stringr
?str_replace_all
# Challenge ------------------------------------------------------------------
# Write a function `remove_digits` that will remove all digits
# (i.e., 0 through 9) from all elements in a *vector of strings*.
remove_digits <- function(string){
str_replace_all(string, "[:digit:]", "")
}
remove_digits(my_bday_intro)
# Demonstrate that your approach is successful by passing a vector of courses
# to your function. For example, remove_digits(c("INFO 201", "CSE 142"))
remove_digits(c("POLS 447", "INFO 201", "SPAN 202"))
# view `midwest` dataset
View(midwest)
library("shiny")
library("dplyr")
library("plotly")
library("ggplot2")
# view `midwest` dataset
View(midwest)
values <- colnames(midwest)
# Build scatter plot file
build_scatter <- function(data, search = "", xvar = input$feature, yvar = "poptotal") {
xmax <- max(data[, xvar]) * 1.2
ymax <- max(data[, yvar]) * 1.2
# create plot
ggplot(data = midwest, mapping = aes_string(x = "poptotal", y = input$feature, color = "blue")) +
geompoint() %>%
layout(xaxis = list(range = c(0, xmax), title = "Total Population in County"),
yaxis = list(range = c(0, ymax), ttle = "Percent of Population")) %>%
return()
}
# Define `ui` variable
shinyUI(navbarPage("Poverty in the Midwest", tabPanel(
"Scatter",
# Add a titlePanel to your tab
titlePanel("Percent White vs. Percent Below Poverty per State"),
# Create a sidebar layout for this tab (page)
sidebarLayout(sidebarPanel(
# Make a textInput widget for searching for a state in your scatter plot
selectInput(inputId = "feature",
label = "Choose a State",
choices = values[12:16]
),
# Create a main panel, in which you should display your plotly Scatter plot
mainPanel(
plotlyOutput("scatter")
))))))
# Define `ui` variable
shinyUI(navbarPage("Poverty in the Midwest", tabPanel(
"Scatter",
# Add a titlePanel to your tab
titlePanel("Percent White vs. Percent Below Poverty per State"),
# Create a sidebar layout for this tab (page)
sidebarLayout(sidebarPanel(
# Make a textInput widget for searching for a state in your scatter plot
selectInput(inputId = "feature",
label = "Choose a State",
choices = values[12:16]
),
# Create a main panel, in which you should display your plotly Scatter plot
mainPanel(
plotOutput("scatter")
))))))
# Define `ui` variable
shinyUI(navbarPage("Poverty in the Midwest", tabPanel(
"Scatter",
# Add a titlePanel to your tab
titlePanel("Percent White vs. Percent Below Poverty per State"),
# Create a sidebar layout for this tab (page)
sidebarLayout(sidebarPanel(
# Make a textInput widget for searching for a state in your scatter plot
selectInput(inputId = "feature",
label = "Choose a State",
choices = values[12:16]
),
# Create a main panel, in which you should display your plotly Scatter plot
mainPanel(
plotOutput("scatter")
))))))
# Define `ui` variable
shinyUI(navbarPage("Poverty in the Midwest", tabPanel(
"Scatter",
# Add a titlePanel to your tab
titlePanel("Percent White vs. Percent Below Poverty per State"),
# Create a sidebar layout for this tab (page)
sidebarLayout(sidebarPanel(
# Make a textInput widget for searching for a state in your scatter plot
selectInput(inputId = "feature",
label = "Choose a State",
choices = values[12:16]
),
# Create a main panel, in which you should display your plotly Scatter plot
mainPanel(
plotOutput(outputId = "scatter")
))))))
# Define `ui` variable
shinyUI(navbarPage("Poverty in the Midwest", tabPanel(
"Scatter",
# Add a titlePanel to your tab
titlePanel("Percent White vs. Percent Below Poverty per State"),
# Create a sidebar layout for this tab (page)
sidebarLayout(sidebarPanel(
# Make a textInput widget for searching for a state in your scatter plot
selectInput(inputId = "feature",
label = "Choose a State",
choices = values[12:16],
),
# Create a main panel, in which you should display your plotly Scatter plot
mainPanel(
plotOutput(outputId = "scatter")
))))))
# Define `ui` variable
shinyUI(navbarPage("Poverty in the Midwest", tabPanel(
"Scatter",
# Add a titlePanel to your tab
titlePanel("Percent White vs. Percent Below Poverty per State"),
# Create a sidebar layout for this tab (page)
sidebarLayout(sidebarPanel(
# Make a textInput widget for searching for a state in your scatter plot
selectInput(inputId = "feature",
label = "Choose a State",
choices = values[12:16])
),
# Create a main panel, in which you should display your plotly Scatter plot
mainPanel(
plotOutput(outputId = "scatter")
)))))
runApp('C:/Users/MacKenzie/Desktop/Info201/a8-mhwood22')
# Build scatter plot file
build_scatter <- function(data, search = "", xvar = input$feature, yvar = "poptotal") {
xmax <- max(data[, xvar]) * 1.2
ymax <- max(data[, yvar]) * 1.2
# create plot
ggplot(data = midwest, mapping = aes_string(x = data[, xvar], y = data[, yvar], color = "blue")) +
geompoint() %>%
layout(xaxis = list(range = c(0, xmax), title = "Total Population in County"),
yaxis = list(range = c(0, ymax), title = "Percent of Population")) %>%
return()
}
runApp('C:/Users/MacKenzie/Desktop/Info201/a8-mhwood22')
shiny::runApp('C:/Users/MacKenzie/Desktop/Info201/a8-mhwood22')
shiny::runApp('C:/Users/MacKenzie/Desktop/Info201/Info_201_Final_Project')
setwd("C:/Users/MacKenzie/Desktop/Info201/Info_201_Final_Project")
source("scripts/degree_comparison.R")
source("scripts/degree_comparison.R")
source("scripts/degree_comparison.R")
data <- read.csv("data/degrees-that-pay-back.csv", stringsAsFactors = FALSE)
source("scripts/degree_comparison.R")
# to use this function, a vector of different majors must be inputted
degree_comparison <- function(degrees) {
# helper code: https://stackoverflow.com/questions/31944103/convert-currency-with-commas-into-numeric
data_one <- data %>%
filter(Undergraduate.Major %in% degrees) %>%
mutate(
starting = as.numeric(gsub("[$,]", "", Starting.Median.Salary)),
mid_median = as.numeric(gsub("[$,]", "", Mid.Career.Median.Salary)),
mid_10th = as.numeric(gsub("[$,]", "",
Mid.Career.10th.Percentile.Salary)),
mid_25th = as.numeric(gsub("[$,]", "",
Mid.Career.25th.Percentile.Salary)),
mid_75th = as.numeric(gsub("[$,]", "",
Mid.Career.75th.Percentile.Salary)),
mid_90th = as.numeric(gsub("[$,]", "",
Mid.Career.90th.Percentile.Salary))
) %>%
select(-Starting.Median.Salary, -Mid.Career.Median.Salary,
-Mid.Career.10th.Percentile.Salary,
-Mid.Career.25th.Percentile.Salary,
-Mid.Career.75th.Percentile.Salary,
-Mid.Career.90th.Percentile.Salary)
salary_plot <- plot_ly(
data = data_one,
x = ~Undergraduate.Major,
y = ~starting,
name = "Starting Median",
type = "bar"
) %>%
add_trace(
y = ~mid_median,
name = "Mid-Career Median"
) %>%
add_trace(
y = ~mid_10th,
name = "Mid-Career 10th Percentile"
) %>%
add_trace(
y = ~mid_25th,
name = "Mid-Career 25th Percentile"
) %>%
add_trace(
y = ~mid_75th,
name = "Mid-Career 75th Percentile"
) %>%
add_trace(
y = ~mid_90th,
name = "Mid-Career 90th Percentile"
) %>%
layout(
xaxis = list(title = "Degree"),
yaxis = list(title = "Salary"),
barmode = "group"
)
salary_plot
}
source("scripts/degree_comparison.R")
library(plotly)
source("scripts/degree_comparison.R")
source("scripts/degree_comparison.R")
View(data)
library(ggplot2)
source("regional_analysis.R")
library("dplyr")
#Load in data
regional_data <- read.csv("data/salaries-by-region.csv", stringsAsFactors = FALSE)
#Taking each region separately
unique(regional_data$Region)
california_data <- regional_data %>%
filter(Region == "California")
western_data <- regional_data %>%
filter(Region == "Western")
midwestern_data <- regional_data %>%
filter(Region == "Midwestern")
southern_data <- regional_data %>%
filter(Region == "Southern")
northeastern_data <- regional_data %>%
filter(Region == "Northeastern")
#California Analysis
#Convert "N/A" to NA
california_data[california_data == "N/A"] <- NA
#Get mean for all columns
get_mean_10th(california_data)
get_mean_25th(california_data)
get_mean_start <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Starting.Median.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the midcareer columm
get_mean_median <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.Median.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the 10th percentile columm
get_mean_10th <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.10th.Percentile.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the 25th percentile columm
get_mean_25th <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.25th.Percentile.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the 75th percentile columm
get_mean_75th <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.75th.Percentile.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the 90th percentile column
get_mean_90th <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.90th.Percentile.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.75th.Percentile.Salary))
library("dplyr")
#Load in data
regional_data <- read.csv("data/salaries-by-region.csv", stringsAsFactors = FALSE)
#Taking each region separately
unique(regional_data$Region)
california_data <- regional_data %>%
filter(Region == "California")
western_data <- regional_data %>%
filter(Region == "Western")
midwestern_data <- regional_data %>%
filter(Region == "Midwestern")
southern_data <- regional_data %>%
filter(Region == "Southern")
northeastern_data <- regional_data %>%
filter(Region == "Northeastern")
#California Analysis
#Convert "N/A" to NA
california_data[california_data == "N/A"] <- NA
#Get mean for all columns
get_mean_10th(california_data)
get_mean_25th(california_data)
get_mean_75th(california_data)
get_mean_90th(california_data)
get_mean_median(california_data)
get_mean_start(california_data)
#Western Analysis
#Convert "N/A" to NA
western_data[western_data == "N/A"] <- NA
#Get mean for all columns
get_mean_10th(western_data)
get_mean_25th(western_data)
get_mean_75th(western_data)
get_mean_90th(western_data)
get_mean_median(western_data)
get_mean_start(western_data)
#Midwest Analysis
#Convert "N/A" to NA
midwestern_data[midwestern_data == "N/A"] <- NA
#Get mean for all columns
get_mean_10th(midwestern_data)
get_mean_25th(midwestern_data)
get_mean_75th(midwestern_data)
get_mean_90th(midwestern_data)
get_mean_median(midwestern_data)
get_mean_start(midwestern_data)
#Southern Analysis
#Convert "N/A" to NA
southern_data[southern_data == "N/A"] <- NA
#Get mean for all columns
get_mean_10th(southern_data)
get_mean_25th(southern_data)
get_mean_75th(southern_data)
get_mean_90th(southern_data)
get_mean_median(southern_data)
get_mean_start(southern_data)
#Northeastern analysis
#Convert "N/A" to NA
northeastern_data[northeastern_data == "N/A"] <- NA
#Get mean for all columns
get_mean_10th(northeastern_data)
get_mean_25th(northeastern_data)
get_mean_75th(northeastern_data)
get_mean_90th(northeastern_data)
get_mean_median(northeastern_data)
get_mean_start(northeastern_data)
#Create Dataframe
Region <- c("California", "West", "Midwest", "South", "Northeast")
Mean_10th_Percentile <- c(get_mean_10th(california_data),
get_mean_10th(western_data),
get_mean_10th(midwestern_data),
get_mean_10th(southern_data),
get_mean_10th(northeastern_data))
Mean_25th_Percentile <- c(get_mean_25th(california_data),
get_mean_25th(western_data),
get_mean_25th(midwestern_data),
get_mean_25th(southern_data),
get_mean_25th(northeastern_data))
Mean_75th_Percentile <- c(get_mean_75th(california_data),
get_mean_75th(western_data),
get_mean_75th(midwestern_data),
get_mean_75th(southern_data),
get_mean_75th(northeastern_data))
Mean_90th_Percentile <- c(get_mean_90th(california_data),
get_mean_90th(western_data),
get_mean_90th(midwestern_data),
get_mean_90th(southern_data),
get_mean_90th(northeastern_data))
Mean_MidCareer_Median <- c(get_mean_median(california_data),
get_mean_median(western_data),
get_mean_median(midwestern_data),
get_mean_median(southern_data),
get_mean_median(northeastern_data))
Mean_Starting <- c(get_mean_start(california_data),
get_mean_start(western_data),
get_mean_start(midwestern_data),
get_mean_start(southern_data),
get_mean_start(northeastern_data))
regional_data <- data.frame(Region,
Mean_10th_Percentile,
Mean_25th_Percentile,
Mean_75th_Percentile,
Mean_90th_Percentile,
Mean_MidCareer_Median,
Mean_Starting)
choices_holder <- regional_data
choices_holder$Region <- NULL
choices <- colnames(choices_holder)
#Find school with highest starting
max_start <- function(dataframe){
data <- dataframe %>%
filter(Starting.Median.Salary == max(Starting.Median.Salary)) %>%
select(School.Name)
}
max_cali_start <- max_start(california_data)
max_west_start <- max_start(western_data)
max_midwest_start <- max_start(midwestern_data)
max_south_start <- max_start(southern_data)
max_northeast_start <- max_start(northeastern_data)
Highest_Starting_Salary <- c(max_cali_start,
max_west_start,
max_midwest_start,
max_south_start,
max_northeast_start)
#Find school with highest midcareer
max_mid <- function(dataframe){
data <- dataframe %>%
filter(Mid.Career.Median.Salary == max(Mid.Career.Median.Salary)) %>%
select(School.Name)
}
max_cali_mid <- max_mid(california_data)
max_west_mid <- max_mid(western_data)
max_midwest_mid <- max_mid(midwestern_data)
max_south_mid <- "Rice University"
max_northeast_mid <- max_mid(northeastern_data)
Highest_MidCareer_Salary <- c(max_cali_mid,
max_west_mid,
max_midwest_mid,
max_south_mid,
max_northeast_mid)
#Functions:
#Gets mean of the start columm
get_mean_start <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Starting.Median.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the midcareer columm
get_mean_median <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.Median.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the 10th percentile columm
get_mean_10th <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.10th.Percentile.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the 25th percentile columm
get_mean_25th <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.25th.Percentile.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the 75th percentile columm
get_mean_75th <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.75th.Percentile.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
#Gets mean of the 90th percentile column
get_mean_90th <- function(dataframe){
column <- (gsub(
"\\$",
"",
dataframe$Mid.Career.90th.Percentile.Salary))
column <- as.numeric(gsub(",", "", column, fixed = TRUE))
mean(column, na.rm = TRUE)
}
source("regional_analysis.R")
source("scripts/degree_comparison.R")
source("scripts/degree_comparison.R")
source("regional_analysis.R")
shiny::runApp()
