# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
install.packages("nycflights13")
library(nycflights13)
library(dplyr)
# The data frame `flights` should now be accessible to you.
# Use functions to inspect it: how many rows and columns does it have?
# What are the names of the columns?
# Use `??flights` to search for documentation on the data set (for what the
# columns represent)
nrow(flights)
# The data frame `flights` should now be accessible to you.
# Use functions to inspect it: how many rows and columns does it have?
# What are the names of the columns?
# Use `??flights` to search for documentation on the data set (for what the
# columns represent)
nrow(flights)
ncol(flights)
colname(flights)
colnams(flights)
colnames(flights)
?flights
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained or lost while flying (that is: how much of the delay arriving occured
# during flight, as opposed to before departing).
flights <- mutate(flights, gain_in_air = arr_delay - dep_delay)
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
flights <- arrange(flights, desc(gain_in_air))
View(head(flights))
# For practice, repeat the last 2 steps in a single statement using the pipe
# operator. You can clear your environmental variables to "reset" the data frame
flights <- mutate(flights, gain_in_air = arr_delay - dep_delay) %>% arrange(desc(gain_in_air))
# Make a histogram of the amount of time gained using the `hist()` function
hist(flights$gain_in_air)
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
mean(to_sea$gain_in_air, na.rm = TRUE)
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
mean(flights$gain_in_air, na.rm = TRUE)
# Create a data.frame of flights headed to SeaTac ('SEA'), only including the
# origin, destination, and the "gain_in_air" column you just created
to_sea <- flights %>% select(origin, dest, gain_in_air) %>% filter(dest == "SEA")
# On average, did flights to SeaTac gain or loose time?
mean(to_sea$gain_in_air, na.rm = TRUE)
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
library("dplyr")
shiny::runApp('Desktop/Info201/homework/a8-firemochii')
# Neccessary libraries
library("ggplot2")
library("dplyr")
# Assign data
midwest_data <- midwest
# Tab one: Poverty
population_range <- range(midwest_data$poppovertyknown)
col_values <- colnames(midwest_data)
state_values <- unique(midwest_data$state)
#Tab two: College
college_data <- midwest %>%
select(state, popwhite, popblack, popamerindian, popasian, popother, percollege)
percollege_range <- range(college_data$percollege)
college_col_values <- colnames(college_data)
# Neccessary libraries
library("ggplot2")
library("dplyr")
# Assign data
midwest_data <- midwest
# Tab one: Poverty
population_range <- range(midwest_data$poppovertyknown)
col_values <- colnames(midwest_data)
state_values <- unique(midwest_data$state)
#Tab two: College
college_data <- midwest %>%
select(state, popwhite, popblack, popamerindian, popasian, popother, percollege)
percollege_range <- range(college_data$percollege)
college_col_values <- colnames(college_data)
# Neccessary libraries
library("shiny")
library("ggplot2")
# Source in analysis
source("analysis.R")
source("app_ui.R")
server <- function(input, output){
output$plot <- renderPlot({
data <- midwest_data %>%
filter(poppovertyknown > input$pop_range[1], poppovertyknown < input$pop_range[2]) %>%
p <- ggplot(data = data, mapping = aes_string(x = input$feature, y = "poppovertyknown", color = "state")) +
geom_point() +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
p
})
# Neccessary libraries
library("shiny")
library("ggplot2")
# Source in analysis
source("analysis.R")
ui <- navbarPage(
"Midwest Data!",
tabPanel(
"Poverty",
titlePanel("Is There a Relationship For Poverty?"),
sliderInput(
"pop_range",
label = "Adjust The Poverty Population!",
min = population_range[1],
max = 2000000,
value = population_range
),
selectInput(
"feature",
label = "Variables of Interest",
choices = col_values,
selected = "poptotal"
),
plotOutput("plot")
),
tabPanel(
"College",
titlePanel("Does Race Affect Percentage In College?"),
sliderInput(
"college_range",
label = "Percent in College",
min = percollege_range[1],
max = percollege_range[2],
value = percollege_range
),
selectInput(
"college_features",
label = "Different Races",
choices = college_col_values,
selected = "popwhite"
),
plotOutput("plot2")
)
) # end of navbarPage()
runApp('Desktop/Info201/homework/a8-firemochii')
setwd("~/Desktop/Info201/homework/a8-firemochii")
runApp('Desktop/Info201/homework/a8-firemochii')
runApp('Desktop/Info201/homework/a8-firemochii')
runApp('Desktop/Info201/homework/a8-firemochii')
runApp('Desktop/Info201/homework/a8-firemochii')
runApp('Desktop/Info201/homework/a8-firemochii')
runApp('Desktop/Info201/homework/a8-firemochii')
library("dplyr")
#Load in data
regional_data <- read.csv("data/salaries-by-region.csv", stringsAsFactors = FALSE)
#Taking each region separately
unique(regional_data$Region)
california_data <- regional_data %>%
filter(Region == "California")
western_data <- regional_data %>%
filter(Region == "Western")
midwestern_data <- regional_data %>%
filter(Region == "Midwestern")
southern_data <- regional_data %>%
filter(Region == "Southern")
northeastern_data <- regional_data %>%
filter(Region == "Northeastern")
#California Analysis
#Convert "N/A" to NA
california_data[california_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
california_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
california_data$Mid.Career.Median.Salary))
california_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",california_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
california_mean <- mean(california_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Western Analysis
#Convert "N/A" to NA
western_data[western_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
western_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
western_data$Mid.Career.Median.Salary))
western_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",western_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
western_mean <- mean(western_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Midwest Analysis
#Convert "N/A" to NA
midwestern_data[midwestern_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
midwestern_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
midwestern_data$Mid.Career.Median.Salary))
midwestern_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",midwestern_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
midwest_mean <- mean(midwestern_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Southern Data
#Convert "N/A" to NA
southern_data[southern_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
southern_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
southern_data$Mid.Career.Median.Salary))
southern_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",southern_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
southern_mean <- mean(southern_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Northeastern analysis
#Convert "N/A" to NA
northeastern_data[northeastern_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
northeastern_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
northeastern_data$Mid.Career.Median.Salary))
northeastern_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",northeastern_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
northeast_mean <- mean(northeastern_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
Region <- c("California", "West", "Midwest", "South", "Northeast")
Median_Salary <- c(california_mean, western_mean, midwest_mean, southern_mean, northeast_mean)
regional_means <- data.frame(Region, Median_Salary)
# test <- function(dataframe, column){
#   dataframe$column <- (gsub( "\\$", "", dataframe$column))
#   return (dataframe[[column]])
# }
#
# test(california_data, Mid.Career.90th.Percentile.Salary)
library("dplyr")
#Load in data
regional_data <- read.csv("data/salaries-by-region.csv", stringsAsFactors = FALSE)
#Taking each region separately
unique(regional_data$Region)
california_data <- regional_data %>%
filter(Region == "California")
western_data <- regional_data %>%
filter(Region == "Western")
midwestern_data <- regional_data %>%
filter(Region == "Midwestern")
southern_data <- regional_data %>%
filter(Region == "Southern")
northeastern_data <- regional_data %>%
filter(Region == "Northeastern")
#California Analysis
#Convert "N/A" to NA
california_data[california_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
california_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
california_data$Mid.Career.Median.Salary))
california_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",california_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
california_mean <- mean(california_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Western Analysis
#Convert "N/A" to NA
western_data[western_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
western_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
western_data$Mid.Career.Median.Salary))
western_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",western_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
western_mean <- mean(western_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Midwest Analysis
#Convert "N/A" to NA
midwestern_data[midwestern_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
midwestern_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
midwestern_data$Mid.Career.Median.Salary))
midwestern_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",midwestern_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
midwest_mean <- mean(midwestern_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Southern Data
#Convert "N/A" to NA
southern_data[southern_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
southern_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
southern_data$Mid.Career.Median.Salary))
southern_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",southern_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
southern_mean <- mean(southern_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Northeastern analysis
#Convert "N/A" to NA
northeastern_data[northeastern_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
northeastern_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
northeastern_data$Mid.Career.Median.Salary))
northeastern_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",northeastern_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
northeast_mean <- mean(northeastern_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
Region <- c("California", "West", "Midwest", "South", "Northeast")
Median_Salary <- c(california_mean, western_mean, midwest_mean, southern_mean, northeast_mean)
regional_means <- data.frame(Region, Median_Salary)
# test <- function(dataframe, column){
#   dataframe$column <- (gsub( "\\$", "", dataframe$column))
#   return (dataframe[[column]])
# }
#
# test(california_data, Mid.Career.90th.Percentile.Salary)
california_data <- regional_data %>%
filter(Region == "California")
setwd("~/Desktop/Info201/homework/Info_201_Final_Project")
library("dplyr")
#Load in data
regional_data <- read.csv("data/salaries-by-region.csv", stringsAsFactors = FALSE)
#Taking each region separately
unique(regional_data$Region)
california_data <- regional_data %>%
filter(Region == "California")
western_data <- regional_data %>%
filter(Region == "Western")
midwestern_data <- regional_data %>%
filter(Region == "Midwestern")
southern_data <- regional_data %>%
filter(Region == "Southern")
northeastern_data <- regional_data %>%
filter(Region == "Northeastern")
#California Analysis
#Convert "N/A" to NA
california_data[california_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
california_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
california_data$Mid.Career.Median.Salary))
california_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",california_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
california_mean <- mean(california_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Western Analysis
#Convert "N/A" to NA
western_data[western_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
western_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
western_data$Mid.Career.Median.Salary))
western_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",western_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
western_mean <- mean(western_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Midwest Analysis
#Convert "N/A" to NA
midwestern_data[midwestern_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
midwestern_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
midwestern_data$Mid.Career.Median.Salary))
midwestern_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",midwestern_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
midwest_mean <- mean(midwestern_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Southern Data
#Convert "N/A" to NA
southern_data[southern_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
southern_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
southern_data$Mid.Career.Median.Salary))
southern_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",southern_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
southern_mean <- mean(southern_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
#Northeastern analysis
#Convert "N/A" to NA
northeastern_data[northeastern_data == "N/A"] <- NA
#Get rid of $ sign and convert to numeric
northeastern_data$Mid.Career.Median.Salary <- (gsub(
"\\$",
"",
northeastern_data$Mid.Career.Median.Salary))
northeastern_data$Mid.Career.Median.Salary <- as.numeric(gsub(
",","",northeastern_data$Mid.Career.Median.Salary,fixed=TRUE))
#Take mean
northeast_mean <- mean(northeastern_data[["Mid.Career.Median.Salary"]], na.rm = TRUE)
Region <- c("California", "West", "Midwest", "South", "Northeast")
Median_Salary <- c(california_mean, western_mean, midwest_mean, southern_mean, northeast_mean)
regional_means <- data.frame(Region, Median_Salary)
# test <- function(dataframe, column){
#   dataframe$column <- (gsub( "\\$", "", dataframe$column))
#   return (dataframe[[column]])
# }
#
# test(california_data, Mid.Career.90th.Percentile.Salary)
View(regional_means)
server <- function(input, output){
output$plot <- renderPlot({
data <- regional_means %>%
p <- ggplot(data = data, mapping = aes_string(x = "Region", y = "Median_Salary", color = "Region")) +
geom_bar() +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
p
})
}
shiny::runApp()
library(ggplot2)
# Load in libraries
library(dplyr)
library(shiny)
library(ggplot2)
# Source in files
source("regional_analysis.R")
source("ui.R")
# Define the server logic
server <- function(input, output){
output$plot <- renderPlot({
data <- regional_means %>%
p <- ggplot(data = data, mapping = aes_string(x = "Region", y = "Median_Salary", color = "Region")) +
geom_bar() +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
p
})
}
runApp()
data <- regional_means
runApp()
runApp()
server <- function(input, output){
output$plot <- renderPlot({
data <- regional_means %>%
p <- ggplot(data = data, mapping = aes_string(x = "Region", y = "Median_Salary", color = "Region")) +
geom_bar() +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
p
})
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(california_data)
test <- function(dataframe, column){
dataframe$column <- (gsub( "\\$", "", dataframe$column))
return (dataframe[[column]])
}
test(california_data, Mid.Career.90th.Percentile.Salary)
test <- function(dataframe, column){
dataframe <- dataframe %>% mutate(column, (gsub( "\\$", "", column)))
return (dataframe[[column]])
}
test(california_data, Mid.Career.90th.Percentile.Salary)
test(california_data, "Mid.Career.90th.Percentile.Salary")
test <- function(dataframe, column){
test <- function(dataframe, column){
dataframe <- dataframe %>% mutate(column, (gsub( "\\$", "")))
return (dataframe[[column]])
}
test(california_data, "Mid.Career.90th.Percentile.Salary")
View(california_data)
test <- function(dataframe, column){
dataframe <- dataframe %>% mutate(column, (gsub( "\\$", "")))
View(dataframe)
}
test(california_data, "Mid.Career.90th.Percentile.Salary")
test <- function(column){
return((gsub( "\\$", "", column)))
# northeastern_data$Mid.Career.Median.Salary <- (gsub(
#   "\\$",
#   "",
#   northeastern_data$Mid.Career.Median.Salary))
}
test(california_data[[Mid.Career.90th.Percentile.Salary]])
test <- function(column){
print((gsub( "\\$", "", column)))
# northeastern_data$Mid.Career.Median.Salary <- (gsub(
#   "\\$",
#   "",
#   northeastern_data$Mid.Career.Median.Salary))
}
test(california_data[[Mid.Career.90th.Percentile.Salary]])
test <- function(column){
b <- ((gsub( "\\$", "", column)))
b
# northeastern_data$Mid.Career.Median.Salary <- (gsub(
#   "\\$",
#   "",
#   northeastern_data$Mid.Career.Median.Salary))
}
test(california_data[[Mid.Career.90th.Percentile.Salary]])
test(california_data$Mid.Career.90th.Percentile.Salary)
test(california_data[Mid.Career.90th.Percentile.Salary])
b <- print((gsub( "\\$", "", california_data$Mid.Career.90th.Percentile.Salary)))
b <- ((gsub( "\\$", "", california_data$Mid.Career.90th.Percentile.Salary)))
b
typeof(b)
b <- ((gsub( "\\$", "", california_data$Mid.Career.90th.Percentile.Salary)))
test <- ((gsub( "\\$", "", california_data$Mid.Career.90th.Percentile.Salary)))
